#!/bin/bash

#	Copyright (C) 2011  Unison Networks Ltd
#
#	This program is free software: you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation, either version 3 of the License, or
#	(at your option) any later version.
#
#	This program is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For the moment, we just print out a message to the user.
echo -e "${BOLD_CYAN}LM3S1968 specific configuration...\n${NO_COLOUR}"

# If this is a new component, create a separate section in the component configuration file for target specific stuff.
if [ ${VF_COMPONENT_NEW} ]; then
	echo -e "\n### TARGET (LM3S1968) SPECIFIC ###\n" >> ${CONFIG_FILE}
fi

# 1. Ask if the user wants to include the standard startup code file (taken from the Luminary Micro Peripheral Driver Library).

# If we're reconfiguring an existing component, then we indicate what the existing configuration says.
if [ ${VF_COMPONENT_NEW} ]; then
	echo -e -n "${GREEN}Do you wish to use standard startup code (else you must create your own)? (Y/N)${NO_COLOUR}"
else
	DEFAULT=$([ "`echo \"${SRC_IMPORT_FILES}\" | grep 'res/arm/embedded-arm/lm3s1968/startup.c:startup.c'`" = "" ] && echo "N" || echo "Y")
	echo -e -n "${GREEN}Do you wish to use standard startup code (else you must create your own)? (Y/N) (Currently: ${NO_COLOUR}${DEFAULT}${GREEN})${NO_COLOUR}"
fi
# We loop continuously until the user enters a valid choice.
while :
do
	# Read a single character of user input.
	read -s -n 1 -p " "
	# If they responded YES, then add the startup code to the list of files to import.  If NO, then move on.
	if [[ $REPLY =~ ^[Yy]$ ]]; then
		# Add the startup files to the list of files to import.
		echo -e "${REPLY}\n${CYAN}Using standard startup code.\n${NO_COLOUR}"
		push_key ${CONFIG_FILE} "SRC_IMPORT_FILES" "' res/arm/embedded-arm/lm3s1968/startup.c:startup.c'" --concat
		push_key ${CONFIG_FILE} "SRC_IMPORT_FILES" "' res/arm/embedded-arm/lm3s1968/startup.h:startup.h'" --concat
		break
	elif [[ $REPLY =~ ^[Nn]$ ]]; then
		# Don't add the startup files.
		echo -e "${REPLY}\n${CYAN}Not using standard startup code.\n${NO_COLOUR}"
		push_key ${CONFIG_FILE} "SRC_IMPORT_FILES" "' res/arm/embedded-arm/lm3s1968/startup.c:startup.c'" --delete
		push_key ${CONFIG_FILE} "SRC_IMPORT_FILES" "' res/arm/embedded-arm/lm3s1968/startup.h:startup.h'" --delete
		break
	elif [[ $REPLY == $'\n' ]]; then
		# The user is apparently a moron.
		echo -e -n "${RED}Blank is not a choice.${NO_COLOUR}"
	else
		# The user is apparently a moron.
		echo -e -n "${REPLY}\n${RED}Invalid choice.  Try again.${NO_COLOUR}"
	fi
done

# All done.

