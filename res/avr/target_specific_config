#!/bin/bash

#	Copyright (C) 2011  Unison Networks Ltd
#
#	This program is free software: you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation, either version 3 of the License, or
#	(at your option) any later version.
#
#	This program is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Prompt the user to select the appropriate configuration for the target.
echo -e "${CYAN}AVR specific configuration...\n${NO_COLOUR}"

# If this is a new component, create a separate section in the component configuration file for target specific stuff.
if [ ${NEW} ]; then
	echo -e "\n### TARGET (AVR) SPECIFIC ###\n" >> ${CONFIG_FILE}
fi

# 1. Prompt the user to enter the clock speed the MCU will be running at.

# If we're reconfiguring an existing component, then we indicate what the existing configuration says.
if [ -z "`pull_key ${CONFIG_FILE} \"CLK_SPEED_IN_MHZ\"`" ]; then
	echo -e -n "${GREEN}Please enter the clock speed, as an integer in MHz:${NO_COLOUR}"
else
	echo -e -n "${GREEN}Please enter the clock speed, as an integer in MHz: (Currently: ${NO_COLOUR}${CLK_SPEED_IN_MHZ}${GREEN})${NO_COLOUR}"
fi
# We loop continuously until the user enters a valid choice.
while :
do
	# Read a line of input from the user.
	read -r -e -i "${CLK_SPEED_IN_MHZ}" -p " "
	# Check if the user input a valid response (a number).
	if [ -z "$REPLY" ]; then
		# The user is apparently a moron.
		echo -e -n "${RED}Invalid choice.  Try again.${NO_COLOUR}"
	elif ! [[ "$REPLY" =~ ^[0-9]+?$ ]] ; then
		# The user is apparently a moron.
		echo -e -n "${RED}Invalid choice.  Try again.${NO_COLOUR}"
	else
		# A legitimate value was entered, so we can go now.
		CLK_SPEED_IN_MHZ=$REPLY
		echo -e "${CYAN}Selected clock speed of ${CLK_SPEED_IN_MHZ}MHz.\n${NO_COLOUR}"
		break
	fi
done
# Write setting to the configuration file.
push_key ${CONFIG_FILE} "CLK_SPEED_IN_MHZ" "${CLK_SPEED_IN_MHZ}"

# All done.

