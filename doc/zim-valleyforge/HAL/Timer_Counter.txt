Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2014-12-10T17:38:16+13:00

====== Timer Counter ======
Created Wednesday 10 December 2014

Basic Information

=== Goal ===
[ ] Implement the key functionalities of a Timer/ Counter hardware abstraction library (HAL).
[ ] Create a user friendly library intuitive to use and descriptive enough that new users can understand the functions.
[ ] Take care of bugs

=== General Abstraction Model ===

The main difference in Timer/ Counter modules between targets are :

1. Number of Timer/ Counters units.
2. Number of input and output channels in each Timer/ Counter unit.
3. Pin configuration of each Timer/ Counter unit.
4. Timer/ Counter register bit configurations.
5. Available interrupt options.

The Timer/ Counter module is abstracted into two segments, the user and the implementation. The data stored within the implementations are linked to the user's instance of the Timer/ Counter unit, creating a singleton pattern. Constructors and destructors are rigidly set and undesired variations of constructing or destructing a instance of Timer/ Counter module are poisoned. 

=== Class ===
Contains functions and variables required to interface with, both synchronous and asyncronous, Timer/ Counter module of the target microcontroller.  

== Private ==
Timer/ Counter uses the singleton pattern and therefore, within the private field, the pointer to the instance of the implementation are stored.

Limiting the users to a designed method of instantiating a Timer/ Counter unit requires prohibiting undesired methods of constructing and destroying instances. Therefore, methods of instanciating the Timer/ Counter class that are undesireable are stored in the private field of the class. This is refered to as poisoning the function calls.

Data associated with controlling a Timer/ Counter unit are contained within registers in the target microcontroller. Implementation of the Timer/ Counter (Tc_imp) contains the links to the registers but are designed to be inaccessible to the user's instance of Timer/ Counter class.

== Public ==
Functions which the user calls to manipulate the Timer/ Counter unit to the desired behaviour. Each available funtion will be available to review on the Doxygen documentation for the Timer and Counter unit. 

It is highly advised that the user should read over the use of each Timer/ Counter modes of operation before testing code. The abstraction of each mode can be found in the Usage section of the Timer/ Counter sub page.

== Public Target Dependent Information ==
AVR micro controllers share very similar functional structures but do have several differences which are important to know when interfacing with. The links below will take you to the target specific characteristics.


==== Implementation Status ====

8-bit Timer/Counter PWM generation does not work.
