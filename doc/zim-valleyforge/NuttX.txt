Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2015-01-07T07:55:13+13:00

====== NuttX ======

NuttX is a real-time operating system (RTOS) with an emphasis on standards compliance and small footprint. Scalable from 8-bit to 32-bit microcontroller environments, the primary governing standards in NuttX are Posix and ANSI standards. Additional standard APIs from Unix and other common RTOS's (such as VxWorks) are adopted for functionality not available under these standards, or for functionality that is not appropriate for deeply-embedded environments (such as fork()). 

[[NuttX]] is the real-time operating system that the Pixhawk autopilot system runs on. A complete list of the supported devices can be found [[http://www.nuttx.org/Documentation/NuttX.html#platforms|here]].

A [[http://www.nuttx.org/doku.php?id=documentation:userguide|user guide]] is available on the NuttX [[http://www.nuttx.org/|website]], along with a a list of key features. The [[NuttX]] Git repository can be found at their [[http://sourceforge.net/p/nuttx/git/ci/master/tree/|SourceForge page]].

===== Installation =====
[[NuttX]] only requires two directories from the Git repository; the apps/ and nuttx/ directories. By default, the apps/ and nuttx/ directory should be installed alongside each other in the same directory.

Instructions for configuring and building [[NuttX]] can be found on the "[[+Configuration|Configuration]]" page.

===== NuttShell (NSH) =====
NuttShell is the terminal that is available when running NuttX. NuttShell replicates a number of standard shell commands, such as cd, mkdir, [ ] (test), etc. When connected to NuttShell, "?" prints the list of available commands as well as a list of "Builtin Apps". These applications are the custom programs that have been included in the [[NuttX]] build.

Further information can be found in the [[http://www.nuttx.org/Documentation/NuttShell.html|NuttShell documentation]].

===== Applications =====
[[NuttX]] applications are programs that can be executed from the NuttShell (NSH). Each executable in a [[ValleyForge]] project is implemented as an application. The applications generated by the [[ValleyForge]] toolchain are stored in apps/external.
