#! /bin/bash
# Having the shebang at the top makes my text editor colour the contents of the file nicely.  It isn't required though.

#	Copyright (C) 2015 Unison Networks Ltd
#
#	This program is free software: you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation, either version 3 of the License, or
#	(at your option) any later version.
#
#	This program is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with this program.  If not, see <http://www.gnu.org/licenses/>

# This is the default configuration file for the code compliance functionality of the ValleyForge toolchain.

# Set the key COMPLIANCE_OUTPUT_CONSOLE to non-empty to enable printing console output upon detecting compliance failures.  Similarly, set the
# key COMPLIANCE_OUTPUT_FILE to enable writing output to file upon detecting compliance failures.  During a normal build operation, the output
# file will be located in the component's output directory in the 'bin' folder.

# By default, compliance logs are written to the console, but not to file.

COMPLIANCE_OUTPUT_CONSOLE=1
COMPLIANCE_OUTPUT_FILE=
COMPLIANCE_MASK=

# For each function of the form "compliance_check_file_*" located in a file "bld/code_compliance/checkfuncs_*", if the corresponding key
# "COMPLIANCE_EN_compliance_check_file_*" is set to either ERROR or WARNING, then the specified function will be run for each source file
# to be checked for compliance.  Assuming these functions call the function "compliance_fail_line" each time they detect a compliance failure
# in the specified source file, then the selection of ERROR or WARNING will determine the severity of the response.

# By default, all the normal compliance checks are enabled, but set to be warnings.

COMPLIANCE_EN_compliance_check_file_master=
COMPLIANCE_EN_compliance_check_file_thinger=
COMPLIANCE_EN_compliance_check_file_varname=
COMPLIANCE_EN_compliance_check_file_classnamecheck=
COMPLIANCE_EN_compliance_check_file_filecomplete=
COMPLIANCE_EN_compliance_check_file_filenamesplchar=
COMPLIANCE_EN_compliance_check_file_constname=
COMPLIANCE_EN_compliance_check_file_headercheck=
COMPLIANCE_EN_compliance_check_file_headerguard=
COMPLIANCE_EN_compliance_check_file_funcname=
COMPLIANCE_EN_compliance_check_file_structnamecheck=
COMPLIANCE_EN_compliance_check_file_layout="WARNING"
COMPLIANCE_EN_compliance_check_file_layout_spacing="WARNING"
COMPLIANCE_EN_compliance_check_file_layout_indentation="WARNING"
COMPLIANCE_EN_compliance_check_file_layout_newline=
COMPLIANCE_EN_compliance_check_file_comment=
COMPLIANCE_EN_exception_limits=

 
# Legacy keys which control the behaviour of the 'master' check, which wraps all Ravi's checks together.

COMPLIANCE_LEGACY_layout=1		# If enabled, the layout of the code is remodelled according to proper standards. Recommended to be enabled.
COMPLIANCE_LEGACY_variablename=1	# If enabled, warning messages are displayed if the variable names are not all in lowercase.
COMPLIANCE_LEGACY_classstructname=1	# If enabled, warning messages are displayed if the names of classes, structures, templates do not begin with an uppercase letter.
COMPLIANCE_LEGACY_constname=1		# If enabled, warning messages are displayed if the names of constants have lowercase letters.
COMPLIANCE_LEGACY_funcname=1		# If enabled, warning messages are displayed if the function names have uppercase letters.
COMPLIANCE_LEGACY_filecomplete=1	# If enabled, warning messages are displayed if the files do not end with "// ALL DONE" comment.
COMPLIANCE_LEGACY_headerguard=1		# If enabled, warning messages are displayed if the header files do not contain an include guard.
COMPLIANCE_LEGACY_filename=1		# If enabled, warning messages are displayed if the file names contain special characters other than "_".
COMPLIANCE_LEGACY_headerfilecheck=1	# If enabled, warning messages are displayed if no matching header files are found.
 
# ALL DONE.
