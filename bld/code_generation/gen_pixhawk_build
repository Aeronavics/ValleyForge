#!/bin/bash

#	Copyright (C) 2013 Unison Networks Ltd
#
#	This program is free software: you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation, either version 3 of the License, or
#	(at your option) any later version.
#
#	This program is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with this program.  If not, see <http://www.gnu.org/licenses/>

###########################################################################################################################
###
### Name:		gen_pixhawk_build
###
### Author:		Zane Barker
###
### Date Created:	27-11-2014
###
### Type:		Bash Function Definitions
###
### Purpose:		Provides functions which generate code which implements the Pixhawk platform.
###
###########################################################################################################################

# Indicate the file was imported successfully.
echo -e "${CYAN}Imported Pixhawk code generation functions.\n${NO_COLOUR}"

######################################## FUNCTION #########################################
###
### Name:		gen_pixhawk_build
###
### Inputs/Outputs:	Takes the path to the source location where to place the code.
###
### Purpose:		Fetches files which implements the Pixhawk platform.
###
###########################################################################################
gen_pixhawk_build()
{
	# DEFINE CONSTANTS

	GEN_CACHE=${TCPATH}/tmp/gen_cache

	# PRIVATE INTERNAL FUNCTIONS

	# FUNCTION PROPER STARTS HERE

	# Check if the specified location is actually legit.
	if [ ! -d $1 ]; then
		# The specified location is not a directory.
		echo -e "${RED}Invalid source location for code generation.\n${NO_COLOUR}"
		return 1
	fi
	echo -e "${CYAN}Fetching Pixhawk platform code...\n${NO_COLOUR}"

	# Check to see if the required platform configuration settings are present.
	if [ -z "${PIXHAWK_COMMON_SOURCE}" -o -z "${PIXHAWK_TEMPLATE_SOURCE}" ]; then
		# Some of the required platform configuration settings are missing, so we must abort.
		echo -e "${RED}Pixhawk platform configuration incomplete. Cannot fetch Pixhawk files.\n${NO_COLOUR}"
		return 1
	fi

	# Unpack the Pixhawk source files where they are needed.
	unpack_pixhawk
	if [ $? -ne 0 ]; then
		# We couldn't unpack the Pixhawk source, so we have to abort
		return 1
	fi

	# First we copy the original Pixhawk source files across to where they are needed.
	echo -e "${CYAN}\tImporting Pixhawk source files...\n${NO_COLOUR}"

	# Copy the Pixhawk source files across to where they are needed.
	cp -fr ${PIXHAWK_COMMON_SOURCE}/ $1/Firmware/

	# Copy the rcS script and any other files with #!nsh at the beginning into /ROMFS/px4fmu_common/init.d
	cp $(find . -type f -print0 | xargs -0 grep -l '#!nsh') $1/Firmware/ROMFS/px4fmu_common/init.d

	# Move the Pixhawk configuration files into the /nuttx/ directory, overwriting any pre-existing files.
	echo -e "${CYAN}\tReplacing Pixhawk configuration files...\n${NO_COLOUR}"

	# All done.
	return 0
}

# ALL DONE.
