#! /bin/bash
# Having the shebang at the top makes my text editor colour the contents of the file nicely.  It isn't required though.

#	Copyright (C) 2012 Unison Networks Ltd
#
#	This program is free software: you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation, either version 3 of the License, or
#	(at your option) any later version.
#
#	This program is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with this program.  If not, see <http://www.gnu.org/licenses/>

# This is a config file for the different targets of the ValleyForge toolchain.

# This file contains configurations for AVR32 architecture targets.

# This section contains information on the application build profiles.

function bconf_AT32UC3C0512C_BareMetal()
{
BCONF_NAME="AT32UC3C0512C Bare Metal"
MAKEFUNCTION=makeavr32
MAKEFILE=${TCPATH}/res/common/Makefile
IOHEADER="<avr32/io.h>"
STDINTHEADER="<stdint.h>"
	# Compilers and flags.
C_COMPILER=${TCPATH}/res/avr32/avr32comp/bin/avr32-gcc
P_COMPILER=${TCPATH}/res/avr32/avr32comp/bin/avr32-g++
ASSEMBLER=${TCPATH}/res/avr32/avr32comp/bin/avr32-as
LINKER=${TCPATH}/res/avr32/avr32comp/bin/avr32-gcc
OBJCOPY=${TCPATH}/res/avr32/avr32comp/bin/avr32-objcopy
OBJDUMP=${TCPATH}/res/avr32/avr32comp/bin/avr32-objdump
SIZE=${TCPATH}/res/avr32/avr32comp/bin/avr32-size
OPTLEVEL=s # Optimization level to use: s (for size), 1, 2, 3 (for performance) or 0 (none).
CFLAGS='-I . -g -O${OPTLEVEL} -Wall -ffunction-sections -fpack-struct -fshort-enums -funsigned-bitfields -funsigned-char -fno-exceptions -mpart=${MCU_CODE} -std=c11'
PFLAGS='-I . -g -O${OPTLEVEL} -Wall -ffunction-sections -fpack-struct -fshort-enums -funsigned-bitfields -funsigned-char -fno-exceptions -mpart=${MCU_CODE} -std=c++11'
AFLAGS='-I. -mpart=${MCU_CODE} -x assembler-with-cpp -Wall -gstabs'
LFLAGS='-g -Wl,--gc-sections -mpart=${MCU_CODE}'
	# HAL specific keys.
HAL_HEADER_PATH=res/common/hal
HAL_SOURCE_PATH=res/avr32/hal
HAL_EN_LIST="gpio"
	# Target specific keys.
TARGET_SPECIFIC_CONFIG=
MCU_CODE=uc3c0512c
PORT_COUNT="A B C D"
	# Platform specific keys.
PLATFORM_SPECIFIC_CONFIG=
	# Uploading keys (common).
UPLOAD_FUNCTIONS=
	# Code generation keys.
CODE_GENERATORS="gen_canmsgs"
}

function bconf_AT32UC3C0512C_freertos()
{
BCONF_NAME="AT32UC3C0512C Bare Metal"
MAKEFUNCTION=makeavr32
MAKEFILE=${TCPATH}/res/common/Makefile
IOHEADER="<avr32/io.h>"
STDINTHEADER="<stdint.h>"
	# Compilers and flags.
C_COMPILER=${TCPATH}/res/avr32/avr32comp/bin/avr32-gcc
P_COMPILER=${TCPATH}/res/avr32/avr32comp/bin/avr32-g++
ASSEMBLER=${TCPATH}/res/avr32/avr32comp/bin/avr32-as
LINKER=${TCPATH}/res/avr32/avr32comp/bin/avr32-gcc
OBJCOPY=${TCPATH}/res/avr32/avr32comp/bin/avr32-objcopy
OBJDUMP=${TCPATH}/res/avr32/avr32comp/bin/avr32-objdump
SIZE=${TCPATH}/res/avr32/avr32comp/bin/avr32-size
OPTLEVEL=s # Optimization level to use: s (for size), 1, 2, 3 (for performance) or 0 (none).
CFLAGS='-I . -g -O${OPTLEVEL} -Wall -ffunction-sections -fpack-struct -fshort-enums -funsigned-bitfields -funsigned-char -fno-exceptions -mpart=${MCU_CODE} -std=c11'
PFLAGS='-I . -g -O${OPTLEVEL} -Wall -ffunction-sections -fpack-struct -fshort-enums -funsigned-bitfields -funsigned-char -fno-exceptions -mpart=${MCU_CODE} -std=c++11'
AFLAGS='-I. -mpart=${MCU_CODE} -x assembler-with-cpp -Wall -gstabs'
LFLAGS='-g -Wl,--gc-sections -mpart=${MCU_CODE}'
	# HAL specific keys.
HAL_HEADER_PATH=res/common/hal
HAL_SOURCE_PATH=res/avr32/hal
HAL_EN_LIST="gpio"
	# Target specific keys.
TARGET_SPECIFIC_CONFIG=
MCU_CODE=uc3c0512c
PORT_COUNT="A B C D"
LINKSCRIPT=${TCPATH}/res/avr32/freertos/uc3c0512c/link_uc3c0512c.lds
	# Platform specific keys.
	# TODO - Fix me.
PLATFORM_SPECIFIC_CONFIG=
BCONF_SPECIFIC_RTOS_PATH=res/avr32/freertos/uc3c0512c
BCONF_COMMON_RTOS_PATH=res/freertos
FREERTOS_CONFIG_FILE=${TCPATH}/res/templates/freertos/uc3c0512c/FreeRTOSConfig.h
	# Uploading keys (common).
UPLOAD_FUNCTIONS=
	# Code generation keys.
CODE_GENERATORS="gen_canmsgs"
}

# This section contains information on the bootloader build profiles.

# TODO - There are currently no suitable bootloaders supported for AVR32 targets.

