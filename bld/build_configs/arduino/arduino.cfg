#!/usr/bin/env bash
# Having the shebang at the top makes my text editor colour the contents of the file nicely.  It isn't required though.

#	Copyright (C) 2012 Unison Networks Ltd
#
#	This program is free software: you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation, either version 3 of the License, or
#	(at your option) any later version.
#
#	This program is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with this program.  If not, see <http://www.gnu.org/licenses/>

# This is a config file for the different targets of the ValleyForge toolchain.

# This file contains common configuration definitions for Arduino architecture targets (distinct from conventional AVR targets).

# This section contains information on the application build profiles.

function bcdefs_common_arduino
{
		# General keys for Arduino targets.
	MAKEFUNCTION=makearduino
	MAKEFILE=${TCPATH}/res/common/Makefile
	IOHEADER="<avr/io.h>"
	STDINTHEADER="<stdint.h>"
	LOOSE_OBJECTS="arduino_core/arduino/wiring_digital.o arduino_core/arduino/main.o arduino_core/arduino/wiring.o arduino_core/arduino/hooks.o arduino_core/arduino/WInterrupts.o"
		# Compilers and flags.
	C_COMPILER="$TCPATH/tmp/tmp_compiler/arduino/arduino-dist/hardware/tools/avr/bin/avr-gcc"
	P_COMPILER="$TCPATH/tmp/tmp_compiler/arduino/arduino-dist/hardware/tools/avr/bin/avr-g++"
	ASSEMBLER="$TCPATH/tmp/tmp_compiler/arduino/arduino-dist/hardware/tools/avr/bin/avr-as"
	LINKER="$TCPATH/tmp/tmp_compiler/arduino/arduino-dist/hardware/tools/avr/bin/avr-gcc"
	OBJCOPY="$TCPATH/tmp/tmp_compiler/arduino/arduino-dist/hardware/tools/avr/bin/avr-objcopy"
	OBJDUMP="$TCPATH/tmp/tmp_compiler/arduino/arduino-dist/hardware/tools/avr/bin/avr-objdump"
	SIZE="$TCPATH/tmp/tmp_compiler/arduino/arduino-dist/hardware/tools/avr/bin/avr-size"
	OPTLEVEL="s" # Choose s for size, or 0-3 for performance.
	CFLAGS='-g -mmcu=${MCU_CODE} -O${OPTLEVEL} -mcall-prologues -ffunction-sections -fdata-sections -fsigned-char -Wformat -Wall -Wshadow -Wpointer-arith -Wcast-align -Wwrite-strings -Wformat=2 -DARDUINO=154 -std=c11'
	PFLAGS='-g -mmcu=${MCU_CODE} -O${OPTLEVEL} -mcall-prologues -ffunction-sections -fdata-sections -fsigned-char -fno-exceptions -Wformat -Wall -Wshadow -Wpointer-arith -Wcast-align -Wwrite-strings -Wformat=2 -Wno-reorder -DARDUINO=154  -std=c++11'
	AFLAGS='-mmcu=${MCU_CODE} -Wa'
	LFLAGS='-g -mmcu=${MCU_CODE} -O${OPTLEVEL} -Wl,--gc-sections -lm'
		# Template generation keys.
	TEMPLATE_C_SOURCE="${TCPATH}/res/templates/c_template.c"
	TEMPLATE_CPP_SOURCE="${TCPATH}/res/templates/cpp_template.cpp"
	TEMPLATE_H_SOURCE="${TCPATH}/res/templates/h_template.h"
	TEMPLATE_HPP_SOURCE="${TCPATH}/res/templates/hpp_template.hpp"
		# Target specific keys (only for Arduino).
	ARDUINO_VARIANT="standard"
}

# This section contains information on the bootloader build profiles.

# ALL DONE.
