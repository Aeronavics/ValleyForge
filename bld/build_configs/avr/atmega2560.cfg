#!/usr/bin/env bash
# Having the shebang at the top makes my text editor colour the contents of the file nicely.  It isn't required though.

#	Copyright (C) 2012 Unison Networks Ltd
#
#	This program is free software: you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation, either version 3 of the License, or
#	(at your option) any later version.
#
#	This program is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with this program.  If not, see <http://www.gnu.org/licenses/>

# This is a config file for the different targets of the ValleyForge toolchain.

# This file contains configurations for the AVR ATmega2560 targets.

# This section contains information on the application build profiles.

function bconf_ATmega2560_BareMetal()
{
bcdefs_common_avr # Include common definitions for AVR target configurations.
BCONF_NAME="ATmega2560 Bare Metal"

	# HAL specific keys.
HAL_HEADER_PATH=res/common/hal
HAL_SOURCE_PATH=res/avr/hal
HAL_EN_LIST="gpio watchdog eeprom tc usart spi i2c"
	# Target specific keys.
TARGET_SPECIFIC_CONFIG=res/avr/target_specific_config
MCU_CODE=atmega2560
PORT_COUNT="A B C D E F G H I J K L"
SHARED_FUNCTIONS_ADDRESS="0x3F9E0"
BOOTLOADER_TRAMPOLINE_ADDRESS="0x0000"
	# Platform specific keys.
PLATFORM_SPECIFIC_CONFIG=
TEMPLATE_C_SOURCE="${TCPATH}/res/templates/c_template.c"
TEMPLATE_CPP_SOURCE="${TCPATH}/res/templates/cpp_template.cpp"
TEMPLATE_H_SOURCE="${TCPATH}/res/templates/h_template.h"
TEMPLATE_HPP_SOURCE="${TCPATH}/res/templates/hpp_template.hpp"
	# Uploading keys (common).
UPLOAD_FUNCTIONS="upload_avrdude upload_can upload_cscript"
	# Uploading keys (via upload_avrdude).
AVRDUDE_PART="m2560"
APPLICATION_FLASH_SIZE="248K" # 256KB less 8K max for bootloader.  Can fit another 8K without bootloader if you are desparate?
FLASH_PAGE_SIZE=256
SIGNATURE="0x1E9801"
	# Code generation keys.
CODE_GENERATORS="gen_canmsgs gen_bootappinterface_avr gen_avrmagic"
}

function bconf_ATmega2560_FreeRTOS()
{
bcdefs_common_avr # Include common definitions for AVR target configurations.
BCONF_NAME="ATmega2560 FreeRTOS"

	# Compilers and flags.
CFLAGS+=' -D FREE_RTOS_INC'
	# HAL specific keys.
HAL_HEADER_PATH=res/common/hal
HAL_SOURCE_PATH=res/avr/hal
HAL_EN_LIST="gpio watchdog eeprom tc usart spi"
	# Target specific keys.
TARGET_SPECIFIC_CONFIG=res/avr/target_specific_config
MCU_CODE=atmega2560
PORT_COUNT="A B C D E F G H I J K L"
SHARED_FUNCTIONS_ADDRESS="0x3F9E0"
BOOTLOADER_TRAMPOLINE_ADDRESS="0x0000"
LINKSCRIPT=${TCPATH}/res/avr/freertos/atmega2560/linker_script.x
	# Platform specific keys.
PLATFORM_SPECIFIC_CONFIG="res/common/platforms/freertos/platform_specific_config"
FREERTOS_COMMON_SOURCE="${TCPATH}/res/vendor/freertos/Source"
FREERTOS_PORTABLE_SOURCE="${TCPATH}/res/vendor/freertos/Source/portable/GCC/ATMega323"
FREERTOS_CONFIG_FILE="${TCPATH}/res/vendor/freertos/Demo/AVR_ATMega323_WinAVR/FreeRTOSConfig.h"
FREERTOS_MEMMAN_FILES="${TCPATH}/res/vendor/freertos/Source/portable/MemMang/heap_1.c ${TCPATH}/res/vendor/freertos/Source/portable/MemMang/heap_2.c ${TCPATH}/res/vendor/freertos/Source/portable/MemMang/heap_3.c ${TCPATH}/res/vendor/freertos/Source/portable/MemMang/heap_4.c"
FREERTOS_PATCHES="${TCPATH}/res/avr/platforms/freertos/patches"
TEMPLATE_C_SOURCE="${TCPATH}/res/templates/freertos/c_template.c"
TEMPLATE_CPP_SOURCE="${TCPATH}/res/templates/freertos/cpp_template.cpp"
TEMPLATE_H_SOURCE="${TCPATH}/res/templates/h_template.h"
TEMPLATE_HPP_SOURCE="${TCPATH}/res/templates/hpp_template.hpp"
	# Uploading keys (common).
UPLOAD_FUNCTIONS="upload_avrdude upload_can upload_cscript"
	# Uploading keys (via upload_avrdude).
AVRDUDE_PART="m2560"
APPLICATION_FLASH_SIZE="248K"
FLASH_PAGE_SIZE=256
SIGNATURE="0x1E9801"
	# Code generation keys.
CODE_GENERATORS="gen_canmsgs gen_bootappinterface_avr gen_avrmagic"
CODE_GENERATORS_CONFIG_TIME="gen_freertos"
}

# This section contains information on the bootloader build profiles.

function bload_ATmega2560_ISP()
{
bldefs_common_avr_bootloader # Include common definitions for AVR modular bootloader series configurations.
BLOAD_NAME="ATmega2560 ISP Only Bootloader"

	# Target specific keys.
MCU_CODE=atmega2560
BOOTSTART="3E000" # Starting address to place bootloader at.  See datasheet.
SHARED_FUNCTIONS_ADDRESS="0x3FFDE"
PORT_COUNT="A B C D E F G H I J K L"
MAX_EEPROM_ADDRESS="0FFF"
ACTIVE_MODULE=bootloader_module_isp
	# Code generation keys.
CODE_GENERATORS="gen_avrmagic"
}

function bload_ATmega2560_I2C()
{
	bload_ATmega2560_ISP
	BLOAD_NAME="ATmega2560 I2C Bootloader"

	# Only keys which differ from the parent need to be redefined.
		# Target specific keys.
	ACTIVE_MODULE=bootloader_module_i2c
}

function bload_ATmega2560_CANSPI()
{
	bload_ATmega2560_ISP
	BLOAD_NAME="ATmega2560 CANbus via Microchip MCP2515 via SPI Bootloader"

	# Only keys which differ from the parent need to be redefined.
		# Target specific keys.
	PIN_CHANGE_INTERRUPT_VECTORS="PCINT0_vect PCINT1_vect PCINT2_vect"
	PIN_CHANGE_INTERRUPTS="PCINT0 PCINT1 PCINT2 PCINT3 PCINT4 PCINT5 PCINT6 PCINT7 PCINT8 PCINT9 PCINT10 PCINT11 PCINT12 PCINT13 PCINT14 PCINT15 PCINT16 PCINT17 PCINT18 PCINT19 PCINT20 PCINT21 PCINT22 PCINT23"
	PIN_CHANGE_INTERRUPT_PORTS="B E J K"
	ACTIVE_MODULE=bootloader_module_canspi
		# Code generation keys.
	CODE_GENERATORS="gen_canmsgs gen_avrmagic"
}

# ALL DONE.
