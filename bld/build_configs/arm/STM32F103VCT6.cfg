#!/usr/bin/env bash
# Having the shebang at the top makes my text editor colour the contents of the file nicely.  It isn't required though.

#	Copyright (C) 2012 Unison Networks Ltd
#
#	This program is free software: you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation, either version 3 of the License, or
#	(at your option) any later version.
#
#	This program is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with this program.  If not, see <http://www.gnu.org/licenses/>

# This is a config file for the different targets of the ValleyForge toolchain.

# This file contains configurations for embedded ARM architecture targets (usually Cortex type CPUs running baremetal).

# This section contains information on the application build profiles.
#this board uses the factory shipped HAL to do all it's functions. The requesite c->C++ conversions have been handled in the gen_semmagic
function bconf_STM32F103VCT6_BareMetal()
{
	bcdefs_common_F103xx_stm #include common configuration
	BCONF_NAME="STMicroelectronics STM32F103VCT6 Cortex-M3"
	#any additional compiler flags here.

	CFLAGS+=" -DSTM32F103xE"
	PFLAGS+=" -DSTM32F103xE"
	AFLAGS+=''
	LFLAGS+=''

	# Target specific config.	
	#target linker script. This is provided when creating a project.
	LINKSCRIPT=${TCPATH}/res/arm/embedded-arm/stm32f10x/stm32f103vctx/STM32F103VCTx_FLASH.ld
	SRC_IMPORT_FILES+=" /res/arm/embedded-arm/stm32f10x/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/arm/startup_stm32f103xe.s:startup.s"
	SRC_IMPORT_FILES+= ' res/arm/embedded-arm/stm32f10x/startup.h:startup.h'
	#SRC_IMPORT_FILES+= ' res/arm/embedded-arm/stm32f10x/startup.c:startup.c'
	# Code generation keys.
	CODE_GENERATORS+=""
	CODE_GENERATORS_CONFIG_TIME=
}

